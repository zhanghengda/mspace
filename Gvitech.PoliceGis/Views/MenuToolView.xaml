<UserControl x:Class="MMC.MSpace.Views.MenuToolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:gvifm="http://schemas.mmc.com/wpf"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:dtselector="http://schemas.mmc.com/dtselector" 
             xmlns:controls="clr-namespace:Mmc.Mspace.Theme.Controls;assembly=Mmc.Mspace.Theme"
        xmlns:converter="clr-namespace:MMC.MSpace.Converter"
            >
    <UserControl.Resources>
        <converter:ConverterKeyToContent x:Key="ConverterKeyToContent"/>
        <dtselector:BarDataTemplateSelector x:Key="BarDataTemplateSelector" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <ItemsControl ItemsSource="{Binding ShellModel.BarMenuItems}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <controls:Buttons  HorizontalContentAlignment="Center" 
                                    Command="{Binding Path='Command'}"
                                    HasPathData="True"
                                    IsNeedSelected="True"
                                    GroupName="HomeMenu"
                                    IsSelected="{Binding IsSelected}"
                                    RIcon="{Binding Icon}"
                                    MouseOverRIcon="{Binding MouseOverIcon}"
                                    PressedRIcon="{Binding PressedOverIcon}"
                                    Style="{StaticResource HomeMenuStyle}"
                                    Content="{Binding Content,Converter={StaticResource ConverterKeyToContent}}"
                                    ToolTip="{Binding Content,Converter={StaticResource ConverterKeyToContent}}"
                                    Height="48" 
                                    Width="120" 
                                    Margin="0,0,0,0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <!--<ItemsControl.Resources>
                <ResourceDictionary>
                    <LinearGradientBrush x:Key="DefaultBg" StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="#3A89FF" Offset="0"/>
                        <GradientStop Color="#317CEB" Offset="1"/>
                    </LinearGradientBrush>
    
                    <Style TargetType="{x:Type gvifm:IconButton}" x:Key="{x:Type gvifm:IconButton}" >
                        <Setter Property="Command" Value="{Binding Command}" />
                        <Setter Property="Height" Value="74" />
                        <Setter Property="Width" Value="80" />
                        <Setter Property="Background" Value="{StaticResource DefaultBg}"/>
                        <Setter Property="gvifm:IconButton.Icon" 	Value="{Binding Icon}" />
                        <Setter Property="gvifm:IconButton.MouseOverIcon" Value="{Binding MouseOverIcon}" />
                        <Setter Property="FrameworkElement.ToolTip" 	 Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type gvifm:IconButton}">
                                    <Border x:Name="_Border"	Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                                        <Image 	Name="img" Grid.Row="0" Height="25" Width="36"	Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Icon}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter TargetName="img" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=MouseOverIcon}" />
                                            <Setter TargetName="_Border" Property="Background" Value="#166DED" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

  
                </ResourceDictionary>
            </ItemsControl.Resources>-->
        </ItemsControl>
    </Grid>
</UserControl>
